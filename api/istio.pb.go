// Code generated by protoc-gen-go. DO NOT EDIT.
// source: istio.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type InternalRoutesRequest struct {
}

func (m *InternalRoutesRequest) Reset()                    { *m = InternalRoutesRequest{} }
func (m *InternalRoutesRequest) String() string            { return proto.CompactTextString(m) }
func (*InternalRoutesRequest) ProtoMessage()               {}
func (*InternalRoutesRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type InternalRoutesResponse struct {
	InternalRoutes []*InternalRouteWithBackends `protobuf:"bytes,1,rep,name=internal_routes,json=internalRoutes" json:"internal_routes,omitempty"`
}

func (m *InternalRoutesResponse) Reset()                    { *m = InternalRoutesResponse{} }
func (m *InternalRoutesResponse) String() string            { return proto.CompactTextString(m) }
func (*InternalRoutesResponse) ProtoMessage()               {}
func (*InternalRoutesResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *InternalRoutesResponse) GetInternalRoutes() []*InternalRouteWithBackends {
	if m != nil {
		return m.InternalRoutes
	}
	return nil
}

type InternalRouteWithBackends struct {
	Hostname string      `protobuf:"bytes,1,opt,name=hostname" json:"hostname,omitempty"`
	Vip      string      `protobuf:"bytes,2,opt,name=vip" json:"vip,omitempty"`
	Backends *BackendSet `protobuf:"bytes,3,opt,name=backends" json:"backends,omitempty"`
}

func (m *InternalRouteWithBackends) Reset()                    { *m = InternalRouteWithBackends{} }
func (m *InternalRouteWithBackends) String() string            { return proto.CompactTextString(m) }
func (*InternalRouteWithBackends) ProtoMessage()               {}
func (*InternalRouteWithBackends) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *InternalRouteWithBackends) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *InternalRouteWithBackends) GetVip() string {
	if m != nil {
		return m.Vip
	}
	return ""
}

func (m *InternalRouteWithBackends) GetBackends() *BackendSet {
	if m != nil {
		return m.Backends
	}
	return nil
}

type RoutesRequest struct {
}

func (m *RoutesRequest) Reset()                    { *m = RoutesRequest{} }
func (m *RoutesRequest) String() string            { return proto.CompactTextString(m) }
func (*RoutesRequest) ProtoMessage()               {}
func (*RoutesRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

type RoutesResponse struct {
	Routes []*RouteWithBackends `protobuf:"bytes,2,rep,name=routes" json:"routes,omitempty"`
}

func (m *RoutesResponse) Reset()                    { *m = RoutesResponse{} }
func (m *RoutesResponse) String() string            { return proto.CompactTextString(m) }
func (*RoutesResponse) ProtoMessage()               {}
func (*RoutesResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *RoutesResponse) GetRoutes() []*RouteWithBackends {
	if m != nil {
		return m.Routes
	}
	return nil
}

type RouteWithBackends struct {
	Hostname        string      `protobuf:"bytes,1,opt,name=hostname" json:"hostname,omitempty"`
	Path            string      `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Backends        *BackendSet `protobuf:"bytes,3,opt,name=backends" json:"backends,omitempty"`
	CapiProcessGuid string      `protobuf:"bytes,4,opt,name=capi_process_guid,json=capiProcessGuid" json:"capi_process_guid,omitempty"`
	RouteWeight     int32       `protobuf:"varint,5,opt,name=route_weight,json=routeWeight" json:"route_weight,omitempty"`
}

func (m *RouteWithBackends) Reset()                    { *m = RouteWithBackends{} }
func (m *RouteWithBackends) String() string            { return proto.CompactTextString(m) }
func (*RouteWithBackends) ProtoMessage()               {}
func (*RouteWithBackends) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *RouteWithBackends) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *RouteWithBackends) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *RouteWithBackends) GetBackends() *BackendSet {
	if m != nil {
		return m.Backends
	}
	return nil
}

func (m *RouteWithBackends) GetCapiProcessGuid() string {
	if m != nil {
		return m.CapiProcessGuid
	}
	return ""
}

func (m *RouteWithBackends) GetRouteWeight() int32 {
	if m != nil {
		return m.RouteWeight
	}
	return 0
}

type BackendSet struct {
	Backends []*Backend `protobuf:"bytes,1,rep,name=backends" json:"backends,omitempty"`
}

func (m *BackendSet) Reset()                    { *m = BackendSet{} }
func (m *BackendSet) String() string            { return proto.CompactTextString(m) }
func (*BackendSet) ProtoMessage()               {}
func (*BackendSet) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *BackendSet) GetBackends() []*Backend {
	if m != nil {
		return m.Backends
	}
	return nil
}

type Backend struct {
	Address string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Port    uint32 `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
}

func (m *Backend) Reset()                    { *m = Backend{} }
func (m *Backend) String() string            { return proto.CompactTextString(m) }
func (*Backend) ProtoMessage()               {}
func (*Backend) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *Backend) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Backend) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func init() {
	proto.RegisterType((*InternalRoutesRequest)(nil), "api.InternalRoutesRequest")
	proto.RegisterType((*InternalRoutesResponse)(nil), "api.InternalRoutesResponse")
	proto.RegisterType((*InternalRouteWithBackends)(nil), "api.InternalRouteWithBackends")
	proto.RegisterType((*RoutesRequest)(nil), "api.RoutesRequest")
	proto.RegisterType((*RoutesResponse)(nil), "api.RoutesResponse")
	proto.RegisterType((*RouteWithBackends)(nil), "api.RouteWithBackends")
	proto.RegisterType((*BackendSet)(nil), "api.BackendSet")
	proto.RegisterType((*Backend)(nil), "api.Backend")
}

func init() { proto.RegisterFile("istio.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 415 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xb1, 0x8f, 0xd3, 0x30,
	0x14, 0xc6, 0xcf, 0x4d, 0xaf, 0x57, 0x5e, 0x72, 0xcd, 0x9d, 0x11, 0x25, 0x04, 0x09, 0x85, 0x4c,
	0x11, 0x48, 0x19, 0x5a, 0x09, 0x76, 0x18, 0x4a, 0x61, 0xa9, 0xc2, 0xd0, 0x31, 0x72, 0x13, 0xab,
	0xb1, 0x68, 0x63, 0x13, 0x3b, 0xe5, 0xcf, 0x63, 0xe2, 0xff, 0x42, 0x71, 0xdc, 0x92, 0xb4, 0xdc,
	0xd0, 0xcd, 0xfe, 0x9e, 0xdf, 0xe7, 0xf7, 0xd3, 0x67, 0x83, 0xcd, 0xa4, 0x62, 0x3c, 0x16, 0x15,
	0x57, 0x1c, 0x5b, 0x44, 0x30, 0xdf, 0xc9, 0xf8, 0x7e, 0xcf, 0xcb, 0x56, 0x0a, 0x5f, 0xc2, 0x8b,
	0x65, 0xa9, 0x68, 0x55, 0x92, 0x5d, 0xc2, 0x6b, 0x45, 0x65, 0x42, 0x7f, 0xd6, 0x54, 0xaa, 0x90,
	0xc0, 0xf4, 0xbc, 0x20, 0x05, 0x2f, 0x25, 0xc5, 0x0b, 0x70, 0x99, 0xa9, 0xa4, 0x95, 0x2e, 0x79,
	0x28, 0xb0, 0x22, 0x7b, 0xf6, 0x26, 0x26, 0x82, 0xc5, 0xbd, 0xae, 0x35, 0x53, 0xc5, 0x27, 0x92,
	0xfd, 0xa0, 0x65, 0x2e, 0x93, 0x09, 0xeb, 0x19, 0x86, 0x07, 0x78, 0xf5, 0xe4, 0x61, 0xec, 0xc3,
	0xb8, 0xe0, 0x52, 0x95, 0x64, 0x4f, 0x3d, 0x14, 0xa0, 0xe8, 0x59, 0x72, 0xda, 0xe3, 0x07, 0xb0,
	0x0e, 0x4c, 0x78, 0x03, 0x2d, 0x37, 0x4b, 0xfc, 0x1e, 0xc6, 0x1b, 0xd3, 0xe9, 0x59, 0x01, 0x8a,
	0xec, 0x99, 0xab, 0x87, 0x31, 0x76, 0xdf, 0xa9, 0x4a, 0x4e, 0x07, 0x42, 0x17, 0xee, 0xfb, 0xac,
	0x2b, 0x98, 0x9c, 0x31, 0xc6, 0x30, 0x32, 0x68, 0x03, 0x8d, 0x36, 0xd5, 0x6e, 0x97, 0x48, 0xe6,
	0xd4, 0xd7, 0xe1, 0x18, 0x3d, 0x0c, 0x3a, 0x57, 0xfc, 0x46, 0xf0, 0x78, 0x1d, 0x13, 0x86, 0xa1,
	0x20, 0xaa, 0x30, 0x50, 0x7a, 0x7d, 0x15, 0x15, 0x7e, 0x07, 0x8f, 0x19, 0x11, 0x2c, 0x15, 0x15,
	0xcf, 0xa8, 0x94, 0xe9, 0xb6, 0x66, 0xb9, 0x37, 0xd4, 0x6e, 0x6e, 0x53, 0x58, 0xb5, 0xfa, 0xa2,
	0x66, 0x39, 0x7e, 0x0b, 0x8e, 0x1e, 0x3c, 0xfd, 0x45, 0xd9, 0xb6, 0x50, 0xde, 0x6d, 0x80, 0xa2,
	0xdb, 0xc4, 0xd6, 0xda, 0x5a, 0x4b, 0xe1, 0x07, 0x80, 0x7f, 0xd7, 0xe0, 0xa8, 0x33, 0x49, 0x1b,
	0xb6, 0xd3, 0x9d, 0xa4, 0x43, 0xfe, 0x11, 0xee, 0x8c, 0x88, 0x3d, 0xb8, 0x23, 0x79, 0x5e, 0x51,
	0x29, 0x0d, 0xed, 0x71, 0xab, 0x61, 0x79, 0xa5, 0x34, 0xec, 0x7d, 0xa2, 0xd7, 0xb3, 0x3f, 0x08,
	0x9c, 0x65, 0xf3, 0x58, 0x3f, 0x73, 0xc1, 0x76, 0x5c, 0xe1, 0x39, 0x8c, 0xbe, 0x50, 0xb2, 0x53,
	0x05, 0xc6, 0xfa, 0xae, 0x76, 0x63, 0x32, 0xf3, 0x9f, 0xf7, 0xb4, 0x36, 0xb6, 0xf0, 0xa6, 0x69,
	0x6a, 0xa3, 0x34, 0x4d, 0xbd, 0xa0, 0x4d, 0x53, 0x3f, 0xeb, 0xf0, 0x06, 0x7f, 0x83, 0x49, 0xff,
	0xad, 0x63, 0xff, 0xf2, 0x29, 0x9f, 0x4c, 0x5e, 0xff, 0xb7, 0x76, 0x34, 0xdb, 0x8c, 0xf4, 0xc7,
	0x9a, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x58, 0xd0, 0x9f, 0x01, 0x7a, 0x03, 0x00, 0x00,
}
