// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bosh_dns_adapter.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetVIPByNameRequest struct {
	Fqdn                 string   `protobuf:"bytes,1,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVIPByNameRequest) Reset()         { *m = GetVIPByNameRequest{} }
func (m *GetVIPByNameRequest) String() string { return proto.CompactTextString(m) }
func (*GetVIPByNameRequest) ProtoMessage()    {}
func (*GetVIPByNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bosh_dns_adapter_773019a85c39745a, []int{0}
}
func (m *GetVIPByNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVIPByNameRequest.Unmarshal(m, b)
}
func (m *GetVIPByNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVIPByNameRequest.Marshal(b, m, deterministic)
}
func (dst *GetVIPByNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVIPByNameRequest.Merge(dst, src)
}
func (m *GetVIPByNameRequest) XXX_Size() int {
	return xxx_messageInfo_GetVIPByNameRequest.Size(m)
}
func (m *GetVIPByNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVIPByNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVIPByNameRequest proto.InternalMessageInfo

func (m *GetVIPByNameRequest) GetFqdn() string {
	if m != nil {
		return m.Fqdn
	}
	return ""
}

type GetVIPByNameResponse struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVIPByNameResponse) Reset()         { *m = GetVIPByNameResponse{} }
func (m *GetVIPByNameResponse) String() string { return proto.CompactTextString(m) }
func (*GetVIPByNameResponse) ProtoMessage()    {}
func (*GetVIPByNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bosh_dns_adapter_773019a85c39745a, []int{1}
}
func (m *GetVIPByNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVIPByNameResponse.Unmarshal(m, b)
}
func (m *GetVIPByNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVIPByNameResponse.Marshal(b, m, deterministic)
}
func (dst *GetVIPByNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVIPByNameResponse.Merge(dst, src)
}
func (m *GetVIPByNameResponse) XXX_Size() int {
	return xxx_messageInfo_GetVIPByNameResponse.Size(m)
}
func (m *GetVIPByNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVIPByNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVIPByNameResponse proto.InternalMessageInfo

func (m *GetVIPByNameResponse) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func init() {
	proto.RegisterType((*GetVIPByNameRequest)(nil), "api.GetVIPByNameRequest")
	proto.RegisterType((*GetVIPByNameResponse)(nil), "api.GetVIPByNameResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BoshDNSAdapterCopilotClient is the client API for BoshDNSAdapterCopilot service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BoshDNSAdapterCopilotClient interface {
	GetVIPByName(ctx context.Context, in *GetVIPByNameRequest, opts ...grpc.CallOption) (*GetVIPByNameResponse, error)
}

type boshDNSAdapterCopilotClient struct {
	cc *grpc.ClientConn
}

func NewBoshDNSAdapterCopilotClient(cc *grpc.ClientConn) BoshDNSAdapterCopilotClient {
	return &boshDNSAdapterCopilotClient{cc}
}

func (c *boshDNSAdapterCopilotClient) GetVIPByName(ctx context.Context, in *GetVIPByNameRequest, opts ...grpc.CallOption) (*GetVIPByNameResponse, error) {
	out := new(GetVIPByNameResponse)
	err := c.cc.Invoke(ctx, "/api.BoshDNSAdapterCopilot/GetVIPByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BoshDNSAdapterCopilotServer is the server API for BoshDNSAdapterCopilot service.
type BoshDNSAdapterCopilotServer interface {
	GetVIPByName(context.Context, *GetVIPByNameRequest) (*GetVIPByNameResponse, error)
}

func RegisterBoshDNSAdapterCopilotServer(s *grpc.Server, srv BoshDNSAdapterCopilotServer) {
	s.RegisterService(&_BoshDNSAdapterCopilot_serviceDesc, srv)
}

func _BoshDNSAdapterCopilot_GetVIPByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVIPByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BoshDNSAdapterCopilotServer).GetVIPByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BoshDNSAdapterCopilot/GetVIPByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BoshDNSAdapterCopilotServer).GetVIPByName(ctx, req.(*GetVIPByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BoshDNSAdapterCopilot_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.BoshDNSAdapterCopilot",
	HandlerType: (*BoshDNSAdapterCopilotServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVIPByName",
			Handler:    _BoshDNSAdapterCopilot_GetVIPByName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bosh_dns_adapter.proto",
}

func init() {
	proto.RegisterFile("bosh_dns_adapter.proto", fileDescriptor_bosh_dns_adapter_773019a85c39745a)
}

var fileDescriptor_bosh_dns_adapter_773019a85c39745a = []byte{
	// 166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4b, 0xca, 0x2f, 0xce,
	0x88, 0x4f, 0xc9, 0x2b, 0x8e, 0x4f, 0x4c, 0x49, 0x2c, 0x28, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0xd2, 0xe4, 0x12, 0x76, 0x4f, 0x2d, 0x09, 0xf3,
	0x0c, 0x70, 0xaa, 0xf4, 0x4b, 0xcc, 0x4d, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12,
	0xe2, 0x62, 0x49, 0x2b, 0x4c, 0xc9, 0x93, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95,
	0xd4, 0xb8, 0x44, 0x50, 0x95, 0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0xf1, 0x71, 0x31, 0x65,
	0x16, 0x40, 0x55, 0x32, 0x65, 0x16, 0x18, 0xc5, 0x71, 0x89, 0x3a, 0xe5, 0x17, 0x67, 0xb8, 0xf8,
	0x05, 0x3b, 0x42, 0xec, 0x73, 0xce, 0x2f, 0xc8, 0xcc, 0xc9, 0x2f, 0x11, 0x72, 0xe5, 0xe2, 0x41,
	0x36, 0x40, 0x48, 0x42, 0x2f, 0xb1, 0x20, 0x53, 0x0f, 0x8b, 0xf5, 0x52, 0x92, 0x58, 0x64, 0x20,
	0xb6, 0x29, 0x31, 0x24, 0xb1, 0x81, 0x9d, 0x6f, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x62, 0xe6,
	0x8f, 0x81, 0xd8, 0x00, 0x00, 0x00,
}
