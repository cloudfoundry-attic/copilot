// Copyright 2017 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// THIS FILE IS AUTOMATICALLY GENERATED BY MIXGEN.

syntax = "proto3";


// The `servicecontrolreport` template is used by the [Google Service Control](https://istio.io/docs/reference/config/policy-and-telemetry/adapters/servicecontrol/)
// adapter.
// 
// Example config:
// 
// ```yaml
// apiVersion: "config.istio.io/v1alpha2"
// kind: servicecontrolreport
// metadata:
//   name: report
//   namespace: istio-system
// spec:
//   api_version : api.version | ""
//   api_operation : api.operation | ""
//   api_protocol : api.protocol | ""
//   api_service : api.service | ""
//   api_key : api.key | ""
//   request_time : request.time
//   request_method : request.method
//   request_path : request.path
//   request_bytes: request.size
//   response_time : response.time
//   response_code : response.code | 520
//   response_bytes : response.size | 0
//   response_latency : response.duration | "0ms"
// ```
//
// A template used by Google Service Control (servicecontrol) adapter. The adapter
// generates metrics and logentry for each request based on the data point
// defined by this template.
package servicecontrolreport;


import "gogoproto/gogo.proto";
import "mixer/adapter/model/v1beta1/extensions.proto";
import "google/protobuf/any.proto";
import "mixer/adapter/model/v1beta1/report.proto";
import "policy/v1beta1/type.proto";

option (istio.mixer.adapter.model.v1beta1.template_variety) = TEMPLATE_VARIETY_REPORT;
option (istio.mixer.adapter.model.v1beta1.template_name) = "servicecontrolreport";

option (gogoproto.goproto_getters_all) = false;
option (gogoproto.equal_all) = false;
option (gogoproto.gostring_all) = false;

// HandleServicecontrolReportService is implemented by backends that wants to handle request-time 'servicecontrolreport' instances.
service HandleServicecontrolReportService {
    // HandleServicecontrolReport is called by Mixer at request-time to deliver 'servicecontrolreport' instances to the backend.
    rpc HandleServicecontrolReport(HandleServicecontrolReportRequest) returns (istio.mixer.adapter.model.v1beta1.ReportResult);
    
}

// Request message for HandleServicecontrolReport method.
message HandleServicecontrolReportRequest {

    // 'servicecontrolreport' instances.
    repeated InstanceMsg instances = 1;

    // Adapter specific handler configuration.
    //
    // Note: Backends can also implement [InfrastructureBackend][https://istio.io/docs/reference/config/mixer/istio.mixer.adapter.model.v1beta1.html#InfrastructureBackend]
    // service and therefore opt to receive handler configuration during session creation through [InfrastructureBackend.CreateSession][TODO: Link to this fragment]
    // call. In that case, adapter_config will have type_url as 'google.protobuf.Any.type_url' and would contain string
    // value of session_id (returned from InfrastructureBackend.CreateSession).
    google.protobuf.Any adapter_config = 2;

    // Id to dedupe identical requests from Mixer.
    string dedup_id = 3;
}





// Contains instance payload for 'servicecontrolreport' template. This is passed to infrastructure backends during request-time
// through HandleServicecontrolReportService.HandleServicecontrolReport.
message InstanceMsg {

    // Name of the instance as specified in configuration.
    string name = 72295727;
    
    
    string api_version = 1;
    
    
    string api_operation = 2;
    
    
    string api_protocol = 3;
    
    
    string api_service = 4;
    
    
    string api_key = 5;
    
    
    istio.policy.v1beta1.TimeStamp request_time = 6;
    
    
    string request_method = 7;
    
    
    string request_path = 8;
    
    
    int64 request_bytes = 9;
    
    
    istio.policy.v1beta1.TimeStamp response_time = 10;
    
    
    int64 response_code = 11;
    
    
    int64 response_bytes = 12;
    
    
    istio.policy.v1beta1.Duration response_latency = 13;
    
}

// Contains inferred type information about specific instance of 'servicecontrolreport' template. This is passed to
// infrastructure backends during configuration-time through [InfrastructureBackend.CreateSession][TODO: Link to this fragment].
message Type {
    
}


// Represents instance configuration schema for 'servicecontrolreport' template.
message InstanceParam {
    
    
    string api_version = 1;
    
    
    string api_operation = 2;
    
    
    string api_protocol = 3;
    
    
    string api_service = 4;
    
    
    string api_key = 5;
    
    
    string request_time = 6;
    
    
    string request_method = 7;
    
    
    string request_path = 8;
    
    
    string request_bytes = 9;
    
    
    string response_time = 10;
    
    
    string response_code = 11;
    
    
    string response_bytes = 12;
    
    
    string response_latency = 13;
    
}

