// Copyright 2017 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// THIS FILE IS AUTOMATICALLY GENERATED BY MIXGEN.

syntax = "proto3";



//
// Input template
package keyval;


import "gogoproto/gogo.proto";
import "mixer/adapter/model/v1beta1/extensions.proto";
import "google/protobuf/any.proto";
import "mixer/adapter/model/v1beta1/check.proto";


option (istio.mixer.adapter.model.v1beta1.template_variety) = TEMPLATE_VARIETY_CHECK_WITH_OUTPUT;
option (istio.mixer.adapter.model.v1beta1.template_name) = "keyval";

option (gogoproto.goproto_getters_all) = false;
option (gogoproto.equal_all) = false;
option (gogoproto.gostring_all) = false;

// HandleKeyvalService is implemented by backends that wants to handle request-time 'keyval' instances.
service HandleKeyvalService {
    // HandleKeyval is called by Mixer at request-time to deliver 'keyval' instances to the backend.
    rpc HandleKeyval(HandleKeyvalRequest) returns (HandleKeyvalResponse);
    
}

// Request message for HandleKeyval method.
message HandleKeyvalRequest {

    // 'keyval' instance.
    InstanceMsg instance = 1;

    // Adapter specific handler configuration.
    //
    // Note: Backends can also implement [InfrastructureBackend][https://istio.io/docs/reference/config/mixer/istio.mixer.adapter.model.v1beta1.html#InfrastructureBackend]
    // service and therefore opt to receive handler configuration during session creation through [InfrastructureBackend.CreateSession][TODO: Link to this fragment]
    // call. In that case, adapter_config will have type_url as 'google.protobuf.Any.type_url' and would contain string
    // value of session_id (returned from InfrastructureBackend.CreateSession).
    google.protobuf.Any adapter_config = 2;

    // Id to dedupe identical requests from Mixer.
    string dedup_id = 3;
}

message HandleKeyvalResponse {
    istio.mixer.adapter.model.v1beta1.CheckResult result = 1;
    OutputMsg output = 2;
}

// Contains output payload for 'keyval' template.
message OutputMsg {
    
    // value to return
    string value = 2;
    
}

// Contains instance payload for 'keyval' template. This is passed to infrastructure backends during request-time
// through HandleKeyvalService.HandleKeyval.
message InstanceMsg {

    // Name of the instance as specified in configuration.
    string name = 72295727;
    
    // lookup key
    string key = 1;
    
}

// Contains inferred type information about specific instance of 'keyval' template. This is passed to
// infrastructure backends during configuration-time through [InfrastructureBackend.CreateSession][TODO: Link to this fragment].
message Type {
    
}


// Represents instance configuration schema for 'keyval' template.
message InstanceParam {
    
    // lookup key
    string key = 1;
    
}

